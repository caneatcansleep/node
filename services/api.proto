// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "./services";

package server;

// The greeting service definition.
service Controller {
  // Sends a greeting
  rpc UpdateNodeMetric (UpdateNodeMetricRequest) returns (UpdateNodeMetricReply) {}
  rpc UpdateLinkMetric (UpdateLinkMetricRequest) returns (UpdateLinkMetricReply) {}
  rpc SelectRelayPath(SelectRelayPathRequest) returns (SelectRelayPathReply) {}
  rpc RegisterNode(RegisterNodeRequest) returns (RegisterNodeReply) {}
}

message RegisterNodeRequest {
  int32 ip =1;
}

message RegisterNodeReply {
  int32 nodeId=1;
}
// The request message containing the user's name.
message UpdateNodeMetricRequest {
  string name = 1;
  int32 value = 2;
  int32 weight = 3;
  int32 nodeId =4;
}

// The response message containing the greetings
message UpdateNodeMetricReply {
  int32 status = 1;
}

// The request message containing the user's name.
message UpdateLinkMetricRequest {
    int32 linkDropRate = 2;
    int32 linkLatency =3 ;
    int32 weight = 4;
    int32 srcNodeId =5;
    int32 dstNodeId = 6;
}
  
// The response message containing the greetings
message UpdateLinkMetricReply {
    int32 status = 1;
}

message SelectRelayPathRequest {
    int32 startNode =1 ;
    int32 endNode =2 ;
}

message SelectRelayPathReply{
    int32 status = 1;
}