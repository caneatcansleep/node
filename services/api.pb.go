// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: services/api.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReleasePortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Port int32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *ReleasePortRequest) Reset() {
	*x = ReleasePortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleasePortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleasePortRequest) ProtoMessage() {}

func (x *ReleasePortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleasePortRequest.ProtoReflect.Descriptor instead.
func (*ReleasePortRequest) Descriptor() ([]byte, []int) {
	return file_services_api_proto_rawDescGZIP(), []int{0}
}

func (x *ReleasePortRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReleasePortRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type ReleasePortReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReleasePortReply) Reset() {
	*x = ReleasePortReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleasePortReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleasePortReply) ProtoMessage() {}

func (x *ReleasePortReply) ProtoReflect() protoreflect.Message {
	mi := &file_services_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleasePortReply.ProtoReflect.Descriptor instead.
func (*ReleasePortReply) Descriptor() ([]byte, []int) {
	return file_services_api_proto_rawDescGZIP(), []int{1}
}

func (x *ReleasePortReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ReservePortsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PortLeft  int32 `protobuf:"varint,2,opt,name=portLeft,proto3" json:"portLeft,omitempty"`
	PortRight int32 `protobuf:"varint,3,opt,name=portRight,proto3" json:"portRight,omitempty"`
}

func (x *ReservePortsRequest) Reset() {
	*x = ReservePortsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservePortsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservePortsRequest) ProtoMessage() {}

func (x *ReservePortsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservePortsRequest.ProtoReflect.Descriptor instead.
func (*ReservePortsRequest) Descriptor() ([]byte, []int) {
	return file_services_api_proto_rawDescGZIP(), []int{2}
}

func (x *ReservePortsRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservePortsRequest) GetPortLeft() int32 {
	if x != nil {
		return x.PortLeft
	}
	return 0
}

func (x *ReservePortsRequest) GetPortRight() int32 {
	if x != nil {
		return x.PortRight
	}
	return 0
}

type ReservePortsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReservePortsReply) Reset() {
	*x = ReservePortsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservePortsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservePortsReply) ProtoMessage() {}

func (x *ReservePortsReply) ProtoReflect() protoreflect.Message {
	mi := &file_services_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservePortsReply.ProtoReflect.Descriptor instead.
func (*ReservePortsReply) Descriptor() ([]byte, []int) {
	return file_services_api_proto_rawDescGZIP(), []int{3}
}

func (x *ReservePortsReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type RegisterNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip int32 `protobuf:"varint,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *RegisterNodeRequest) Reset() {
	*x = RegisterNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeRequest) ProtoMessage() {}

func (x *RegisterNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeRequest.ProtoReflect.Descriptor instead.
func (*RegisterNodeRequest) Descriptor() ([]byte, []int) {
	return file_services_api_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterNodeRequest) GetIp() int32 {
	if x != nil {
		return x.Ip
	}
	return 0
}

type RegisterNodeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId int32 `protobuf:"varint,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
}

func (x *RegisterNodeReply) Reset() {
	*x = RegisterNodeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterNodeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeReply) ProtoMessage() {}

func (x *RegisterNodeReply) ProtoReflect() protoreflect.Message {
	mi := &file_services_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeReply.ProtoReflect.Descriptor instead.
func (*RegisterNodeReply) Descriptor() ([]byte, []int) {
	return file_services_api_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterNodeReply) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

// The request message containing the user's name.
type UpdateNodeMetricRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value  int32  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Weight int32  `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
	NodeId int32  `protobuf:"varint,4,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
}

func (x *UpdateNodeMetricRequest) Reset() {
	*x = UpdateNodeMetricRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodeMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeMetricRequest) ProtoMessage() {}

func (x *UpdateNodeMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeMetricRequest.ProtoReflect.Descriptor instead.
func (*UpdateNodeMetricRequest) Descriptor() ([]byte, []int) {
	return file_services_api_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateNodeMetricRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateNodeMetricRequest) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *UpdateNodeMetricRequest) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *UpdateNodeMetricRequest) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

// The response message containing the greetings
type UpdateNodeMetricReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateNodeMetricReply) Reset() {
	*x = UpdateNodeMetricReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodeMetricReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeMetricReply) ProtoMessage() {}

func (x *UpdateNodeMetricReply) ProtoReflect() protoreflect.Message {
	mi := &file_services_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeMetricReply.ProtoReflect.Descriptor instead.
func (*UpdateNodeMetricReply) Descriptor() ([]byte, []int) {
	return file_services_api_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateNodeMetricReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// The request message containing the user's name.
type UpdateLinkMetricRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkDropRate int32 `protobuf:"varint,2,opt,name=linkDropRate,proto3" json:"linkDropRate,omitempty"`
	LinkLatency  int32 `protobuf:"varint,3,opt,name=linkLatency,proto3" json:"linkLatency,omitempty"`
	Weight       int32 `protobuf:"varint,4,opt,name=weight,proto3" json:"weight,omitempty"`
	SrcNodeId    int32 `protobuf:"varint,5,opt,name=srcNodeId,proto3" json:"srcNodeId,omitempty"`
	DstNodeId    int32 `protobuf:"varint,6,opt,name=dstNodeId,proto3" json:"dstNodeId,omitempty"`
}

func (x *UpdateLinkMetricRequest) Reset() {
	*x = UpdateLinkMetricRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLinkMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLinkMetricRequest) ProtoMessage() {}

func (x *UpdateLinkMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLinkMetricRequest.ProtoReflect.Descriptor instead.
func (*UpdateLinkMetricRequest) Descriptor() ([]byte, []int) {
	return file_services_api_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateLinkMetricRequest) GetLinkDropRate() int32 {
	if x != nil {
		return x.LinkDropRate
	}
	return 0
}

func (x *UpdateLinkMetricRequest) GetLinkLatency() int32 {
	if x != nil {
		return x.LinkLatency
	}
	return 0
}

func (x *UpdateLinkMetricRequest) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *UpdateLinkMetricRequest) GetSrcNodeId() int32 {
	if x != nil {
		return x.SrcNodeId
	}
	return 0
}

func (x *UpdateLinkMetricRequest) GetDstNodeId() int32 {
	if x != nil {
		return x.DstNodeId
	}
	return 0
}

// The response message containing the greetings
type UpdateLinkMetricReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateLinkMetricReply) Reset() {
	*x = UpdateLinkMetricReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLinkMetricReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLinkMetricReply) ProtoMessage() {}

func (x *UpdateLinkMetricReply) ProtoReflect() protoreflect.Message {
	mi := &file_services_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLinkMetricReply.ProtoReflect.Descriptor instead.
func (*UpdateLinkMetricReply) Descriptor() ([]byte, []int) {
	return file_services_api_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateLinkMetricReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SelectRelayPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartNode int32 `protobuf:"varint,1,opt,name=startNode,proto3" json:"startNode,omitempty"`
	EndNode   int32 `protobuf:"varint,2,opt,name=endNode,proto3" json:"endNode,omitempty"`
}

func (x *SelectRelayPathRequest) Reset() {
	*x = SelectRelayPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectRelayPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectRelayPathRequest) ProtoMessage() {}

func (x *SelectRelayPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectRelayPathRequest.ProtoReflect.Descriptor instead.
func (*SelectRelayPathRequest) Descriptor() ([]byte, []int) {
	return file_services_api_proto_rawDescGZIP(), []int{10}
}

func (x *SelectRelayPathRequest) GetStartNode() int32 {
	if x != nil {
		return x.StartNode
	}
	return 0
}

func (x *SelectRelayPathRequest) GetEndNode() int32 {
	if x != nil {
		return x.EndNode
	}
	return 0
}

type SelectRelayPathReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SelectRelayPathReply) Reset() {
	*x = SelectRelayPathReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectRelayPathReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectRelayPathReply) ProtoMessage() {}

func (x *SelectRelayPathReply) ProtoReflect() protoreflect.Message {
	mi := &file_services_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectRelayPathReply.ProtoReflect.Descriptor instead.
func (*SelectRelayPathReply) Descriptor() ([]byte, []int) {
	return file_services_api_proto_rawDescGZIP(), []int{11}
}

func (x *SelectRelayPathReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

var File_services_api_proto protoreflect.FileDescriptor

var file_services_api_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x38, 0x0a, 0x12,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x5f, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x6f, 0x72,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x72,
	0x74, 0x4c, 0x65, 0x66, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x72,
	0x74, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x22, 0x2b, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x6f,
	0x72, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x25, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x70, 0x22, 0x2b, 0x0a, 0x11, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb3, 0x01, 0x0a, 0x17, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x44, 0x72,
	0x6f, 0x70, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x69,
	0x6e, 0x6b, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69,
	0x6e, 0x6b, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x6c, 0x69, 0x6e, 0x6b, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x72, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x72, 0x63, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x22, 0x2f, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x50, 0x0a, 0x16, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x79,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x4e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x4e,
	0x6f, 0x64, 0x65, 0x22, 0x2e, 0x0a, 0x14, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6c,
	0x61, 0x79, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x32, 0xe6, 0x03, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x12, 0x54, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x1f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x51,
	0x0a, 0x0f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x48, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0c, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a,
	0x2e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_services_api_proto_rawDescOnce sync.Once
	file_services_api_proto_rawDescData = file_services_api_proto_rawDesc
)

func file_services_api_proto_rawDescGZIP() []byte {
	file_services_api_proto_rawDescOnce.Do(func() {
		file_services_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_api_proto_rawDescData)
	})
	return file_services_api_proto_rawDescData
}

var file_services_api_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_services_api_proto_goTypes = []interface{}{
	(*ReleasePortRequest)(nil),      // 0: server.ReleasePortRequest
	(*ReleasePortReply)(nil),        // 1: server.ReleasePortReply
	(*ReservePortsRequest)(nil),     // 2: server.ReservePortsRequest
	(*ReservePortsReply)(nil),       // 3: server.ReservePortsReply
	(*RegisterNodeRequest)(nil),     // 4: server.RegisterNodeRequest
	(*RegisterNodeReply)(nil),       // 5: server.RegisterNodeReply
	(*UpdateNodeMetricRequest)(nil), // 6: server.UpdateNodeMetricRequest
	(*UpdateNodeMetricReply)(nil),   // 7: server.UpdateNodeMetricReply
	(*UpdateLinkMetricRequest)(nil), // 8: server.UpdateLinkMetricRequest
	(*UpdateLinkMetricReply)(nil),   // 9: server.UpdateLinkMetricReply
	(*SelectRelayPathRequest)(nil),  // 10: server.SelectRelayPathRequest
	(*SelectRelayPathReply)(nil),    // 11: server.SelectRelayPathReply
}
var file_services_api_proto_depIdxs = []int32{
	6,  // 0: server.Controller.UpdateNodeMetric:input_type -> server.UpdateNodeMetricRequest
	8,  // 1: server.Controller.UpdateLinkMetric:input_type -> server.UpdateLinkMetricRequest
	10, // 2: server.Controller.SelectRelayPath:input_type -> server.SelectRelayPathRequest
	4,  // 3: server.Controller.RegisterNode:input_type -> server.RegisterNodeRequest
	2,  // 4: server.Controller.ReservePorts:input_type -> server.ReservePortsRequest
	0,  // 5: server.Controller.ReleasePort:input_type -> server.ReleasePortRequest
	7,  // 6: server.Controller.UpdateNodeMetric:output_type -> server.UpdateNodeMetricReply
	9,  // 7: server.Controller.UpdateLinkMetric:output_type -> server.UpdateLinkMetricReply
	11, // 8: server.Controller.SelectRelayPath:output_type -> server.SelectRelayPathReply
	5,  // 9: server.Controller.RegisterNode:output_type -> server.RegisterNodeReply
	3,  // 10: server.Controller.ReservePorts:output_type -> server.ReservePortsReply
	1,  // 11: server.Controller.ReleasePort:output_type -> server.ReleasePortReply
	6,  // [6:12] is the sub-list for method output_type
	0,  // [0:6] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_services_api_proto_init() }
func file_services_api_proto_init() {
	if File_services_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleasePortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleasePortReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservePortsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservePortsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterNodeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodeMetricRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodeMetricReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLinkMetricRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLinkMetricReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectRelayPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectRelayPathReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_api_proto_goTypes,
		DependencyIndexes: file_services_api_proto_depIdxs,
		MessageInfos:      file_services_api_proto_msgTypes,
	}.Build()
	File_services_api_proto = out.File
	file_services_api_proto_rawDesc = nil
	file_services_api_proto_goTypes = nil
	file_services_api_proto_depIdxs = nil
}
